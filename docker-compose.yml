version: '3.5'

services:
  
  mitmprox:
    # image: mitmproxy/mitmproxy
    build:
      context: ./Mitm
    container_name: mitmproxy
    # entrypoint: "mitmweb --web-host 0.0.0.0 --set block_global=false" # Test
    entrypoint: "mitmweb --web-host 0.0.0.0 --set block_global=false --mode transparent --showhost" # Full
    environment:
      http_proxy: "${mitm_http_proxy}"
    networks:
      - front
      - back
    ports:
      - '8083:8081'
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv4.conf.all.send_redirects=0
    cap_add:
          - NET_ADMIN
          - SYS_MODULE
    # depends_on:
    #   - koan

  houston: # Command and control
    # image: kalilinux/kali-rolling:latest
    build:
      context: ./Houston
    environment:
      http_proxy: "${http_proxy}"
    restart: always
    entrypoint: /usr/bin/bash
    tty: true
    networks:
      - back
    depends_on:
      - mitmprox
  
  koan: # Proxy - Network obfuscation
    # image: obfuscated:latest
    build:
      context: ./Koan
    restart: always
    environment:
      TOR_CREDS: "${TOR_CREDS}"
      http_proxy: "${http_proxy}"
    entrypoint: /usr/bin/bash
    tty: true
    networks:
      - front
      - back
      # front:
      #   ipv4_address: 172.16.0.3
      # back:
      #   ipv4_address: 173.16.0.3
    cap_add:
          - NET_ADMIN
          - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
    depends_on:
      - mitmprox

  database: # Data archiving
    image: postgres:latest
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    # entrypoint: /bin/bash
    tty: true
    entrypoint: /bin/sh
    restart: always
    volumes:
      - C:\Users\User\MEGA\Docker\pagodo_and_proxychain\Database\data:/home
    ports:
      - '5432:5432'
    networks:
      - back

networks:
    front: # Public facing network
        driver: bridge
        driver_opts:
          com.docker.network.bridge.enable_ip_masquerade: "true"
        enable_ipv6: false
        ipam:
            driver: default
            config:
                - subnet: 172.16.0.0/16
                  gateway: 172.16.0.1
    
    back: # Internal network
        driver: bridge
        enable_ipv6: false
        # internal: true
        ipam:
            driver: default
            config:
                - subnet: 173.16.0.0/16
                  gateway: 173.16.0.1